{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Acidblue\\\\OneDrive\\\\___lambda\\\\___Labs14\\\\frontend\\\\empoweredconvofrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport types from '../actions';\nconst initialState = {\n  isSending: false,\n  isSent: false,\n  sendingError: false\n};\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case types.INIT_CONVO_START:\n      return _objectSpread({}, state, {\n        isSending: true\n      });\n\n    case types.INIT_CONVO_SUCCESS:\n      return _objectSpread({}, state, {\n        isSending: false,\n        isSent: true\n      });\n\n    case types.INIT_CONVO_FAILURE:\n      return _objectSpread({}, state, {\n        isSending: false,\n        sendingError: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Acidblue\\OneDrive\\___lambda\\___Labs14\\frontend\\empoweredconvofrontend\\src\\reducer\\initConvoReducer.js"],"names":["types","initialState","isSending","isSent","sendingError","state","action","type","payload","INIT_CONVO_START","INIT_CONVO_SUCCESS","INIT_CONVO_FAILURE"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAAA,QACvCC,IADuC,GACrBD,MADqB,CACvCC,IADuC;AAAA,QACjCC,OADiC,GACrBF,MADqB,CACjCE,OADiC;;AAG/C,UAAQD,IAAR;AACE,SAAKP,KAAK,CAACS,gBAAX;AACE,+BAAYJ,KAAZ;AAAmBH,QAAAA,SAAS,EAAE;AAA9B;;AACF,SAAKF,KAAK,CAACU,kBAAX;AACE,+BAAYL,KAAZ;AAAmBH,QAAAA,SAAS,EAAE,KAA9B;AAAqCC,QAAAA,MAAM,EAAE;AAA7C;;AACF,SAAKH,KAAK,CAACW,kBAAX;AACE,+BAAYN,KAAZ;AAAmBH,QAAAA,SAAS,EAAE,KAA9B;AAAqCE,QAAAA,YAAY,EAAEI;AAAnD;;AACF;AACE,aAAOH,KAAP;AARJ;AAUD,CAbD","sourcesContent":["import types from '../actions';\r\n\r\nconst initialState = {\r\n  isSending: false,\r\n  isSent: false,\r\n  sendingError: false,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.INIT_CONVO_START:\r\n      return { ...state, isSending: true };\r\n    case types.INIT_CONVO_SUCCESS:\r\n      return { ...state, isSending: false, isSent: true };\r\n    case types.INIT_CONVO_FAILURE:\r\n      return { ...state, isSending: false, sendingError: payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}