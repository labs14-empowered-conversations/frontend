{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Acidblue\\\\OneDrive\\\\___lambda\\\\___Labs14\\\\frontend\\\\empoweredconvofrontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport types from '../actions';\nconst initialState = {\n  user: {},\n  usersList: {}\n};\nexport default ((state = initialState, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case types.LOGIN_SUCCESS:\n      return _objectSpread({}, state, {\n        user: payload\n      });\n\n    case types.GET_USERS_SUCCESS:\n      return _objectSpread({}, state, {\n        usersList: payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:\\Users\\Acidblue\\OneDrive\\___lambda\\___Labs14\\frontend\\empoweredconvofrontend\\src\\reducer\\usersReducer.js"],"names":["types","initialState","user","usersList","state","action","type","payload","LOGIN_SUCCESS","GET_USERS_SUCCESS"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE;AAFQ,CAArB;AAKA,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAAA,QACvCC,IADuC,GACrBD,MADqB,CACvCC,IADuC;AAAA,QACjCC,OADiC,GACrBF,MADqB,CACjCE,OADiC;;AAG/C,UAAQD,IAAR;AACE,SAAKN,KAAK,CAACQ,aAAX;AACE,+BAAYJ,KAAZ;AAAmBF,QAAAA,IAAI,EAAEK;AAAzB;;AAEF,SAAKP,KAAK,CAACS,iBAAX;AACE,+BACKL,KADL;AAEED,QAAAA,SAAS,EAAEI;AAFb;;AAKF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAhBD","sourcesContent":["import types from '../actions';\r\n\r\nconst initialState = {\r\n  user: {},\r\n  usersList: {},\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case types.LOGIN_SUCCESS:\r\n      return { ...state, user: payload };\r\n\r\n    case types.GET_USERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        usersList: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}